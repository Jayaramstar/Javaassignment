package assignment.java;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Driver {
    String carModel;
    double rating;
    int distanceFromCustomer;
    String predestination;

    public Driver(String carModel, double rating, int distanceFromCustomer, String predestination) {
        this.carModel = carModel;
        this.rating = rating;
        this.distanceFromCustomer = distanceFromCustomer;
        this.predestination = predestination;
    }
}

public class RideBookingSystem {
    public static Driver selectDriver(double rideDistance, String carRequested, List<Driver> drivers) {
        List<Driver> eligibleDrivers = new ArrayList<>();
        for (Driver driver : drivers) {
            if (driver.rating >= 4 && driver.carModel.equals(carRequested)) {
                eligibleDrivers.add(driver);
            }
        }

        if (eligibleDrivers.isEmpty()) {
            return null;
        }

        Driver closestDriver = null;
        for (Driver driver : eligibleDrivers) {
            if (closestDriver == null || driver.distanceFromCustomer < closestDriver.distanceFromCustomer) {
                closestDriver = driver;
            }
        }

        return closestDriver;
    }

    public static double calculateFare(double rideDistance) {
        return rideDistance * 8;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the ride distance (in km): ");
        double rideDistance = scanner.nextDouble();

        System.out.print("Enter the requested car model: ");
        String carRequested = scanner.next();

        System.out.print("Enter the number of drivers: ");
        int numOfDrivers = scanner.nextInt();

        List<Driver> drivers = new ArrayList<>();
        for (int i = 1; i <= numOfDrivers; i++) {
            System.out.println("Enter details for driver " + i + ":");
            System.out.print("Car Model: ");
            String carModel = scanner.next();

            System.out.print("Rating: ");
            double rating = scanner.nextDouble();

            System.out.print("Distance from Customer (in meters): ");
            int distanceFromCustomer = scanner.nextInt();

            System.out.print("Predestination (Leave blank if none): ");
            scanner.nextLine();  // Consume the newline character
            String predestination = scanner.nextLine();

            drivers.add(new Driver(carModel, rating, distanceFromCustomer, predestination));
            System.out.println();
        }

        // Selecting the appropriate driver
        Driver selectedDriver = selectDriver(rideDistance, carRequested, drivers);

        if (selectedDriver == null) {
            System.out.println("No available driver for the requested car type.");
        } else {
            // Calculating the fare
            double fare = calculateFare(rideDistance);
            System.out.println("Driver " + selectedDriver.carModel + " will take you to the destination.");
            System.out.println("Your charge will be Rs " + fare + ".");
        }

        scanner.close();}
}
